# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import route_pb2 as route__pb2


class RouteStub(object):
    """Template
    rpc Function(Request) returns (Message) {}
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitialiseAlgorithm = channel.unary_unary(
                '/Route/InitialiseAlgorithm',
                request_serializer=route__pb2.Selection.SerializeToString,
                response_deserializer=route__pb2.Statistics.FromString,
                )
        self.GetStatistics = channel.unary_unary(
                '/Route/GetStatistics',
                request_serializer=route__pb2.Tmp.SerializeToString,
                response_deserializer=route__pb2.Statistics.FromString,
                )


class RouteServicer(object):
    """Template
    rpc Function(Request) returns (Message) {}
    """

    def InitialiseAlgorithm(self, request, context):
        """Initialise indicator, strategy, parameters
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatistics(self, request, context):
        """Get statistics
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RouteServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitialiseAlgorithm': grpc.unary_unary_rpc_method_handler(
                    servicer.InitialiseAlgorithm,
                    request_deserializer=route__pb2.Selection.FromString,
                    response_serializer=route__pb2.Statistics.SerializeToString,
            ),
            'GetStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatistics,
                    request_deserializer=route__pb2.Tmp.FromString,
                    response_serializer=route__pb2.Statistics.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Route', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Route(object):
    """Template
    rpc Function(Request) returns (Message) {}
    """

    @staticmethod
    def InitialiseAlgorithm(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Route/InitialiseAlgorithm',
            route__pb2.Selection.SerializeToString,
            route__pb2.Statistics.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Route/GetStatistics',
            route__pb2.Tmp.SerializeToString,
            route__pb2.Statistics.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
