// RUN THE FOLLOWING COMMAND AFTER EVERY CHANGE
// for python
// python -m grpc_tools.protoc -I. --python_out=. --grpc_python_out=. strategy.proto 
// for go
/// protoc -I . --go_out=plugins=grpc:pb/strategy strategy.proto


syntax = "proto3";

package strategy_proto;

import "google/protobuf/struct.proto";

service StrategyService {
    // Template
    // rpc Function(Request) returns (Message) {}
    
    // Initialise indicator, strategy, parameters
    rpc InitialiseAlgorithm(Selection) returns (Statistics) {}
    
    rpc StartAlgorithm(StartAlgorithmParam) returns (StartAlgorithmResponse) {}

    rpc StopAlgorithm(StopAlgorithmParam) returns (StopAlgorithmResponse) {}

    rpc Act(Tmp) returns (Statistics) {}
    
    // Get statistics
    rpc GetStatistics(Tmp) returns (Statistics) {}
    
    // Get past data
    rpc GetData(HistoryParams) returns (History) {}
    
    // Get past indicators
    rpc GetIndicators(HistoryParams) returns (History) {}
    
    // Get past performances
    rpc GetPerformances(HistoryParams) returns (History) {}

    // Get strategy balance
    rpc GetBalance(GetBalanceParam) returns (GetBalanceRes) {}
}


message HistoryParams {
    string ID = 1;
    int32 Length = 2;
}

// Dictionary entry
message TimeSeries {
    string Key = 1;
    repeated double Value = 2;
}

// List of dictionary entries
message History {
    repeated TimeSeries TS = 1;
}
 
message Tmp {
    string ID = 1;
    int32 tmp = 2;
}

message Selection {
    string ID = 1;
    string Asset = 2;
    string Strategy = 3;
    google.protobuf.Struct Parameters = 4;
    int32 Capital = 5;
    string Instrument = 6;
    string Granularity = 7;
}

message StartAlgorithmParam {
    string ID = 1;
}

message StartAlgorithmResponse {
    string Error = 1;
}

message StopAlgorithmParam {
    string ID = 1;
}

message StopAlgorithmResponse {
    string Error = 1;
}

message GetBalanceParam {
    string ID = 1;
}

message GetBalanceRes {
    double Balance = 1;
}

message Statistics {
    double v = 1; 
    double t = 2;
    double o = 3;
    double h = 4;
    double l = 5;
    double c = 6;
    double action = 7;
    double balance_change = 8;
    double stock = 9;
    double balance = 10;
    double return = 11;
    double alpha = 12;
    double sharpe = 13;
    double annual_sharpe = 14;
    double sortino = 15;
}